name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: nest
        ports:
          - 5437:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      influxdb:
        image: influxdb:2.7
        env:
          DOCKER_INFLUXDB_INIT_MODE: setup
          DOCKER_INFLUXDB_INIT_USERNAME: admin
          DOCKER_INFLUXDB_INIT_PASSWORD: admin123
          DOCKER_INFLUXDB_INIT_ORG: nestjs-test-org
          DOCKER_INFLUXDB_INIT_BUCKET: sensordata-test
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: admin123
        ports:
          - 8087:8086
        options: >-
          --health-cmd "influx ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mosquitto:
        image: eclipse-mosquitto:2.0
        ports:
          - 8883:8883
        options: >-
          --health-cmd "mosquitto_pub -t test -m test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: yarn prisma generate

      - name: Run database migrations
        run: yarn prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:123@localhost:5437/nest?schema=public

      - name: Run linting
        run: yarn lint

      - name: Run unit tests
        run: yarn test

      - name: Run e2e tests
        run: yarn test:e2e
        env:
          NODE_ENV: test
          PORT: 3334
          DATABASE_URL: postgresql://postgres:123@localhost:5437/nest?schema=public
          JWT_SECRET: test-super-secret
          JWT_EXPIRES_IN: 1d
          MQTT_URL: mqtt://localhost:8883
          MQTT_USERNAME: admin
          MQTT_PASSWORD: admin123
          INFLUXDB_URL: http://localhost:8087
          INFLUXDB_TOKEN: admin123
          INFLUXDB_ORG: nestjs-test-org
          INFLUXDB_BUCKET: sensordata-test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true 