version: '3.8'

services:
  api:
    image: ${DOCKERHUB_USERNAME}/smart-sensor-api:latest
    container_name: smart-sensor-api
    restart: unless-stopped
    ports:
      - "3333:3333"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - MQTT_URL=${MQTT_URL}
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
    depends_on:
      postgres:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      mqtt-broker:
        condition: service_healthy
    networks:
      - smart-sensor-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:13
    container_name: smart-sensor-postgres
    restart: unless-stopped
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: nest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smart-sensor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  influxdb:
    image: influxdb:2.7
    container_name: smart-sensor-influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=nestjs-org
      - DOCKER_INFLUXDB_INIT_BUCKET=sensordata
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - smart-sensor-network
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: smart-sensor-mqtt
    restart: unless-stopped
    ports:
      - "8883:8883"
    environment:
      - MOSQUITTO_USERNAME=${MQTT_USERNAME}
      - MOSQUITTO_PASSWORD=${MQTT_PASSWORD}
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/certs:/mosquitto/certs
    networks:
      - smart-sensor-network
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-t", "test", "-m", "test"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  smart-sensor-network:
    driver: bridge

volumes:
  postgres_data:
  influxdb_data: 